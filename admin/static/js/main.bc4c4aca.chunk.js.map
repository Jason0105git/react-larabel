{"version":3,"sources":["components/Navigation.js","components/Auth.js","components/News.js","components/Profile.js","components/Home.js","containers/App.js","actions/authActions.js","constants/index.js","actions/profileActions.js","actions/newsActions.js","serviceWorker.js","reducers/auth.js","reducers/news.js","reducers/profile.js","reducers/index.js","store/configureStore.js","index.js"],"names":["Navigation","react_default","a","createElement","react_router_dom","to","Auth","this","props","auth","isLogged","logout","login","inputEmail","value","inputPassword","_this","message","error","status","className","htmlFor","type","ref","input","onClick","authUser","bind","Component","News","newsTemplate","news","map","key","id","title","text","console","log","getNews","data","Profile","profileTemplate","profile","Fragment","city","languages","language","social","href","link","target","rel","label","getdata","Home","App","components_Navigation","components_Auth","loginUser","logoutUser","react_router","exact","path","component","render","components_News","Object","assign","components_Profile","getProfile","React","connect","store","dispatch","email","pass","payload","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","password","then","resp","json","catch","actionLogin","arguments","length","undefined","concat","response","actionGetProfile","logged","actionGetNews","Boolean","window","location","hostname","match","initialState","userId","rootReduer","combineReducers","_objectSpread2","state","action","objectSpread","defineProperty","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bc4c4aca.chunk.js","sourcesContent":["import React,{Component} from 'react';\nimport {Link} from 'react-router-dom'\n\nconst Navigation = () => (\n  <ul>     \n    <li><Link to='/'>Home</Link></li>\n    <li><Link to='/news'>News</Link></li>   \n    <li><Link to='/profile'>profile</Link></li>      \n  </ul>\n)\n\nexport default Navigation\n","import React,{Component} from 'react';\n\nclass Auth extends Component {\n  \n  authUser(){\n    (this.props.auth.isLogged)?\n      this.props.logout():\n     this.props.login(this.inputEmail.value,this.inputPassword.value)\n      //this.props.login('max@test.com','12345')\n  }\n\n\trender(){\n    const isLogged = this.props.auth.isLogged\n    const message = (this.props.auth.error.status ===\"err\") ? this.props.auth.error.message: this.props.auth.message\n\n    return(\n      <div className=\"user\">\n\t\t    <ul>\n          <li><label htmlFor=\"login-id\">email</label><input  type=\"email\" ref={(input) => {this.inputEmail = input}} /></li>\n          <li><label htmlFor=\"password-id\">password</label><input type=\"password\" ref={(input) => {this.inputPassword = input}} /></li>\n          <li>\n            <button onClick={this.authUser.bind(this)} >\n          \t  {(isLogged)?<span>Logout</span>:<span>Login</span>}\n          \t</button>\n          </li>\n        </ul>\n      <div className=\"message\">{message}</div>\n      </div>\n     )\n\t}\n}\n\nexport default Auth \n/*\nrender() {\n    return (\n      <div className=\"SearchBar\">\n        <h1>SearchBar</h1>\n        <form onSubmit={this.handleSearchTermSubmit}>\n          <input type=\"text\" ref={(input) => this.textInput = input} />\n          <button>Search</button>\n          <button type=\"button\">Random (doesn't do anything)</button>\n        </form>\n      </div>\n    );\n}\n\n\n\n*/","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nclass News extends Component {\n\tcomponentDidMount(){\n\t\tconsole.log(this.props.auth.isLogged)\n\t\tthis.props.getNews(this.props.auth.isLogged)\n\t\t\n\t}\n\n\tnewsTemplate = (news) => {\n\t\treturn(\n\t\t\t<ul>\n\t\t\t\t{news.map((news)=> \n\t\t\t\t\t<li key={news.id}>\n\t\t\t\t\t\t<h3>{news.title}</h3>\n\t\t\t\t\t\t<p><i>{news.text}</i></p>\n\t\t\t\t\t</li>)\n\t\t\t\t}\n\t\t\t</ul>\t\n\t\t)\n\t}\n\n\trender(){\n\t\n\t\treturn(\n\t\t\t(this.props.auth.isLogged)?\n\t\t\t\t(this.props.news.status == 'ok')?\n\t\t\t\t\tthis.newsTemplate(this.props.news.data)\n\t\t\t\t:<span>...loading</span>\n\t\t\t:<span>access denided</span>\n\t\t)\n\t}\n}\n\nNews.propTypes = {\n\tnews: PropTypes.shape({\n\t\tstatus: PropTypes.string.isRequired,\n\t\tdata: PropTypes.arrayOf(PropTypes.shape({\n\t\t\tid: PropTypes.number,\n\t\t\ttitle: PropTypes.string,\n\t\t\ttext: PropTypes.string\n\t\t}))\n\t}\n\t),\n\t\tauth: PropTypes.shape({\n\t\tisLogged: PropTypes.bool.isRequired\n\t})\t\n}\n\nexport default News","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nconst  displayIco = (label) => {\n\n  return label\n}\n\nclass Profile extends Component {\n\tcomponentDidMount(){\n\t\t//console.log(this.props.auth.data.id)\n\tif(this.props.auth.isLogged){\t\n\t\tthis.props.getdata(this.props.auth.id)\n\t\t}\n\t}\n\t  \n\tprofileTemplate = (profile) => {\n//\t\tconsole.log('profile template',profile)\n\t\treturn(\t\n\t\t\t<>\n\t\t\t\t<p>\n\t\t\t\t\tCity: {profile.city}\n\t\t\t\t</p>\n\t\t\t\t<>\n\t\t\t\t\tLanguages:\n\t\t\t\t\t<ul>\n\t\t\t\t\t{profile.languages.map((language, key) => <li key={key}>+{language}</li>)}\n\t\t\t\t\t</ul>\n\t\t\t\t\tLinks:\n\t\t\t\t\t<ul>\n\t\t\t\t\t\t{profile.social.map((social,key)=>\n\t\t\t\t\t\t\t<li key={key}>\n\t\t\t\t\t\t\t\t<a href={social.link} target=\"_blank\" rel=\"noopener noreferrer\" >\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t{social.label}</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</ul>\n\t\t\t\t</>\n\t\t\t\n\t\t</>\n\t\t)\n\t}\n\n\trender(){\n\t\treturn(\n\t\t(this.props.auth.isLogged)?\n\t\t\t(this.props.profile.status === 'ok')?\n\t\t\tthis.profileTemplate(this.props.profile.data):<span>loading...</span>\n\t\t:<span>access denided</span>\n\t\t)\n\t}\n}\n\nProfile.propTypes = {\n\tprofile: PropTypes.shape({\n\t\tdata: PropTypes.shape({\n\t\t\tuserId: PropTypes.number,\n\t\t\tcity: PropTypes.string,\n\t\t\tlanguages: PropTypes.array,\n\t\t\tsocial: PropTypes.arrayOf(PropTypes.shape({\n\t\t\t\t\"label\": PropTypes.string,\n        \"link\": PropTypes.string\n\t\t\t}))\t\t\t\n\t\t}).isRequired\n\t}),\n\tauth: PropTypes.shape({\n\t\tisLogged: PropTypes.bool.isRequired\n\t})\t\n}\n\n\nexport default Profile","import React from 'react'\nconst  Home = () => (\n\t<div className=\"home-content\">\n\t\t<h2>Task #2</h2>\n\t</div>\n)\n\nexport default Home","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Route} from  'react-router-dom'\n\n\nimport Navigation from '../components/Navigation'\nimport Auth from '../components/Auth'\n\nimport News from '../components/News'\nimport Profile from '../components/Profile'\nimport Home from '../components/Home'\n\nimport {actionLogin, actionLogout} from '../actions/authActions'\nimport {actionGetProfile} from '../actions/profileActions'\nimport {actionGetNews} from '../actions/newsActions'\n\nimport '../App.css'\n\n\n\nclass App extends React.Component {\n   render(){\n   return (\n     <div className=\"container\">    \n      <header>\n          <h1>test task react-redux-router-async</h1>\n      </header>\n      <nav>\n         <Navigation />\n         <Auth \n          auth={this.props.auth} \n          login={this.props.loginUser}\n          logout={this.props.logoutUser}\n          />\n      </nav>\n\n      <main>\n        <aside>\n          <Navigation />\n        </aside>\n\n        <article>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/news' render={(props)=> (\n              <News {...props} \n                news={this.props.news} \n                auth={this.props.auth} \n                getNews={this.props.getNews}\n              />\n            )}\n          />\n          <Route exact path='/profile' render={(props) =>(\n              <Profile {...props} \n                profile={this.props.profile} \n                auth={this.props.auth} \n                getdata={this.props.getProfile}\n              />\n            )} \n          />\n        </article>\n      </main>\n      <footer>&copy;2019&nbsp;footer</footer>\n    </div>\n  );\n }\n}\n\nconst mapStateToProps = store => {\n  return {\n    profile: store.profile,\n    news: store.news,\n    auth: store.auth,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loginUser: (email,pass) => dispatch(actionLogin(email,pass)),\n    logoutUser: () => dispatch(actionLogout()),\n    getProfile: (id) => dispatch(actionGetProfile(id)),\n    getNews: (logged) => dispatch(actionGetNews(logged)),\n  }\n}\nexport default connect( mapStateToProps, mapDispatchToProps)(App)\n\n\n","import {LOGIN_REQUEST, LOGIN_SUCCESS,  LOGIN_ERROR, LOGOUT, REQUEST_ERROR} from '../constants'\n\n\nexport const actionLogin = (email,pass) => {\n\treturn dispatch => {\n\t\n\t\tdispatch({type: LOGIN_REQUEST,payload:{message:'..loading'}})\n\n\t\tfetch('https://mysterious-reef-29460.herokuapp.com/api/v1/validate',{ \n\t\t\t\tmethod: 'POST', \n\t\t\t \theaders: { 'Accept': 'application/json',\n    \t\t'Content-Type': 'application/json',\n  \t\t\t},\n  \t\t\tbody: JSON.stringify({\n    \t\t\temail: email,\n    \t\t\tpassword:pass,\n  \t\t\t})\n\t\t\t})\n\t\t\t.then(resp=>resp.json())\n\t\t\t.then(data=> {\n\t\t\t\n\t\t  \t\tif(data.status === 'ok' ){\n\t\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: LOGIN_SUCCESS, \n\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\tid: data.data.id,\n\t\t\t\t\t\t\t\tstatus: data.status,\n\t\t\t\t\t\t\t\tdata: data.data, \n\t\t\t\t\t\t\t\tisLogged: true,\n\t\t\t\t\t\t\t\tmessage: 'logged'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch({\n\t\t\t\t\t\t\ttype: LOGIN_ERROR, \n\t\t\t\t\t\t\tpayload: {\n\t\t\t\t\t\t\t\tstatus: 'err',\n\t\t\t\t\t\t\t\terror:data,\n\t\t\t\t\t\t\t\tisLogged: false\n\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t})\n\t\t\t}})\n\t\t\t.catch(error => dispatch({type: REQUEST_ERROR}))\n\t}\n}\n\nexport const actionLogout = () => {\n\treturn {\n\t\ttype: LOGOUT,\n\t\tpayload: {\n\n\t\terror: {\n\t\t\tstatus: \"\",\n\t\t  message: \"\"\n\t\t},\n\t\tisLogged: false,\n\t\tstatus: '',\n\t  data: {\n\t    id: 0\n\t\t},\n\t\tmessage: 'not logged'\n\t\t}\n\t}\n}\n/*\n\nfetch('https://mywebsite.com/endpoint/', {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    firstParam: 'yourValue',\n    secondParam: 'yourOtherValue',\n  })\n})\n\n*/","export const GET_USER_REQUEST = 'GET_USER_REQUEST'\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS'\nexport const GET_USER_ERROR = 'GET_USER_ERROR'\n\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const LOGOUT = 'LOGOUT'\nexport const REQUEST_ERROR = 'REQUEST_ERROR'\n\nexport const GET_NEWS_REQUEST = 'GET_NEWS_REQUEST'\nexport const GET_NEWS_SUCCESS = 'GET_NEWS_SUCCESS'\nexport const GET_NEWS_ERROR = 'GET_NEWS_ERROR'\n","import {GET_USER_REQUEST, GET_USER_SUCCESS, GET_USER_ERROR } from '../constants/'\n//  обработка id\nexport const actionGetProfile = (id = 1) => {\n\n\n\treturn dispatch => {\n\t\tdispatch({type:GET_USER_REQUEST,payload:'loading'})\n\n\t\tfetch(`https://mysterious-reef-29460.herokuapp.com/api/v1/user-info/${id}`)\n\t\t  .then(response => response.json())\n\t\t  .then(data=> \tdispatch({type: GET_USER_SUCCESS,\tpayload: data\t}))\n\t\t\t.catch((error) => dispatch({type: GET_USER_ERROR}))\t\t\n\t\t}\n\t\n}\t\t","import {GET_NEWS_REQUEST, GET_NEWS_SUCCESS, GET_NEWS_ERROR} from '../constants'\n\nexport const actionGetNews = (islogged = false) => {\n\tif(islogged){\n\t\treturn dispatch => {\t\t\n\t\t\tdispatch({type:GET_NEWS_REQUEST,payload:'loading'})\n\n\t\t\tfetch('https://mysterious-reef-29460.herokuapp.com/api/v1/news')\n\t\t\t  .then(response => response.json())\n\t\t\t  .then(data=> dispatch({type: GET_NEWS_SUCCESS,\tpayload: data\t}))\n\t\t\t\t.catch((error) => dispatch({type: GET_NEWS_ERROR}))\t\t\n\t\t\t}\n\t}\n\treturn {type: 'NONE'}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {LOGIN_REQUEST,LOGIN_SUCCESS,LOGIN_ERROR,LOGOUT,REQUEST_ERROR} from '../constants'\n\nconst initialState = {\n\tlogin: '',\n\tpassword: '',\n\terror: {\n\t\tstatus: \"\",\n\t  message: \"\"\n\t},\n\tisLogged: false,\n\tstatus: '',\n  data: {\n    id: null\n\t},\n\tmessage: ''\n\n}\n\nexport const auth = (state = initialState, action) => {\n\tswitch(action.type){\n\t\tcase LOGIN_REQUEST:\n\t\t\treturn {...state,isLogged:false, status: '', data:{id:null},message: action.payload.message, error:''}\n\t\tcase LOGIN_SUCCESS:\n\t\t\treturn {...state, isLogged: true, status: action.payload.status,  data:{id: action.payload.id}, message:  action.payload.message,  error:''}\n\t\tcase LOGIN_ERROR: \n\t\t\treturn {...state,isLogged: false,status:'err', error: action.payload.error}\t\n\t\tcase LOGOUT:\t\n\t\t\treturn {...state,isLogged: false,status:'logout', data:{id: null},data: action.payload.data, message:  action.payload.message,  error:''}\n\t\tcase REQUEST_ERROR:\n\t\t\treturn {...state,isLogged: false,status:'server_err',message:'server error'}\n\t\tdefault:\n\t\t\treturn state\t\n\t}\n\treturn state\n}\n","import {GET_NEWS_REQUEST, GET_NEWS_SUCCESS, GET_NEWS_ERROR, GET_USER_SUCCESS, LOGOUT} from '../constants' \n\nconst initialState ={ \n  isLogged: false,\n  status: '',\n  data: []\n}\n\nexport const news = (state = initialState, action) => {\n    switch(action.type){\n      case GET_NEWS_REQUEST:\n        return {...state,status: 'loading'}\n      case GET_NEWS_SUCCESS:\n        return {...state,status: action.payload.status, data: action.payload.data}\n      case LOGOUT:\n        return initialState\n      case GET_USER_SUCCESS: {\n        return {...state, isLogged: true}\n      }  \n      default:\n        return state  \n    }\n\treturn state\n}","import {GET_USER_REQUEST, GET_USER_SUCCESS,LOGOUT, LOGIN_SUCCESS} from '../constants'\n\nconst initialState = {\n  /*status: \"none\",\n  data: {}*/\n  isLogged: false,\n  status: \"none\",\n  data: {\n    userId: 1,\n    city: '',\n    languages: [],\n    social: []\n  }\n}\n\nexport const profile = (state = initialState, action) => {\n  switch(action.type){\n    case GET_USER_REQUEST: \n      return {...state,status:'loading'}\n    case GET_USER_SUCCESS: \n      return {...state, status: action.payload.status, data: action.payload.data}\n    case LOGOUT:\n      return initialState\n    case LOGIN_SUCCESS:\n      return {...state, isLogged: true}  \n    default:\n      return state\n  }\n\treturn state\n}\n\n/*TODO \n\nДополнительно:\n\n    обработать ситуацию, когда пользователь не найден.\n\nЗапрос:\n\nGET https://mysterious-reef-29460.herokuapp.com/api/v1/user-info/2\n\nОтвет:\n\n{\n  \"status\": \"err\",\n  \"message\": \"user_not_found\"\n}\n\n\n\n*/\n\n\n/*\nПолученные данные, положить в стор, и отрисовать на странице следующим образом:\n\nГород: Москва\n\nЗнание языков:\n + English\n + Русский\n\nСсылки:\n\n+ ссылка-иконка 1\n+ ссылка-иконка 2\n\n\n*/","import {combineReducers} from 'redux'\n\nimport {auth} from './auth'\nimport {news} from './news'\nimport {profile} from './profile'\n\nexport const rootReduer = combineReducers({\n\tauth: auth,\n\tnews: news,\n\tprofile: profile\n}\n)","import {createStore,applyMiddleware} from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {rootReduer} from '../reducers'\nimport thunk from 'redux-thunk'\nexport const store = createStore(rootReduer, composeWithDevTools(applyMiddleware(thunk)))\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport {store} from './store/configureStore'\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t   \t<App />\n\t\t</BrowserRouter>\n\t</Provider>\t, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}